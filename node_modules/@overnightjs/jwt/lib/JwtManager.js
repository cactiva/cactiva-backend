"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var randomstring = require("randomstring");
var expressJwt = require("express-jwt");
var jsonwebtoken = require("jsonwebtoken");
var JwtManager = (function () {
    function JwtManager(secret, expires) {
        this.secret = secret;
        this.expires = expires;
    }
    JwtManager.jwt = function (dataToEcrypt) {
        return JwtManager.setupJwt(dataToEcrypt, JwtManager.SECRET, JwtManager.EXP);
    };
    JwtManager.prototype.jwt = function (dataToEcrypt) {
        return JwtManager.setupJwt(dataToEcrypt, this.secret, this.expires);
    };
    JwtManager.setupJwt = function (dataToEcrypt, secret, expires) {
        var exp = {
            expiresIn: expires,
        };
        return jsonwebtoken.sign(dataToEcrypt, secret, exp);
    };
    Object.defineProperty(JwtManager, "middleware", {
        get: function () {
            return JwtManager.setupMiddleware(JwtManager.SECRET);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(JwtManager.prototype, "middleware", {
        get: function () {
            return JwtManager.setupMiddleware(this.secret);
        },
        enumerable: true,
        configurable: true
    });
    JwtManager.setupMiddleware = function (secret) {
        var options = {
            secret: secret,
            userProperty: 'payload',
        };
        return expressJwt(options);
    };
    JwtManager.SECRET = process.env.OVERNIGHT_JWT_SECRET || randomstring.generate(80);
    JwtManager.EXP = process.env.OVERNIGHT_JWT_EXP || '3 days';
    return JwtManager;
}());
exports.JwtManager = JwtManager;
//# sourceMappingURL=JwtManager.js.map